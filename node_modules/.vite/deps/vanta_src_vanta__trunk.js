import {
  P5Base
} from "./chunk-K3FY73TZ.js";
import {
  VANTA,
  color2Hex,
  mobileCheck
} from "./chunk-GT3L752Z.js";
import "./chunk-UXIASGQL.js";

// node_modules/vanta/src/vanta.trunk.js
var p5 = typeof window == "object" && window.p5;
var Effect = class extends P5Base {
  static initClass() {
    this.prototype.p5 = true;
    this.prototype.defaultOptions = {
      color: 9979487,
      backgroundColor: 2237478,
      spacing: 0,
      chaos: 1
      // speed: 1,
    };
  }
  constructor(userOptions) {
    p5 = userOptions.p5 || p5;
    super(userOptions);
  }
  onInit() {
    const t = this;
    let sketch = function(p) {
      let rings = mobileCheck() ? 35 : 55;
      let dim_init = 50;
      let dim_delta = 4;
      let chaos_init = 0.2;
      let chaos_delta = 0.12;
      let chaos_mag = 20;
      let ox = p.random(1e4);
      let oy = p.random(1e4);
      let oz = p.random(1e4);
      p.setup = function() {
        t.initP5(p);
        p.strokeWeight(1);
        p.stroke(color2Hex(t.options.color));
        p.smooth();
        p.noFill();
      };
      p.draw = function() {
        p.clear();
        p.translate(p.width / 2, p.height / 2);
        display();
      };
      function display() {
        oy -= 0.02;
        oz += 5e-5;
        for (let i = 0; i < rings; i++) {
          p.beginShape();
          for (let angle = 0; angle < 360; angle++) {
            let radian = p.radians(angle);
            let radius = t.options.chaos * chaos_mag * getNoiseWithTime(radian, chaos_delta * i + chaos_init, oz) + (dim_delta * i + dim_init) + (i * t.options.spacing || 0);
            p.vertex(radius * p.cos(radian), radius * p.sin(radian));
          }
          p.endShape(p.CLOSE);
        }
      }
      function getNoiseWithTime(radian, dim, time) {
        let r = radian % p.TWO_PI;
        if (r < 0) {
          r += p.TWO_PI;
        }
        return p.noise(ox + p.cos(r) * dim, oy + p.sin(r) * dim, oz + time);
      }
    };
    this.p5 = new p5(sketch);
  }
};
Effect.initClass();
var vanta_trunk_default = VANTA.register("TRUNK", Effect);
export {
  vanta_trunk_default as default
};
//# sourceMappingURL=vanta_src_vanta__trunk.js.map
